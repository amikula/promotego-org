= javascript_include_tag 'syronex-colorpicker'

%h1= t 'search_widget_title'

- t('search_widget_summary').each do |paragraph|
  %p= paragraph

%h2
  1.
  = t 'search_widget_step_1_title'
- t('search_widget_step_1_instructions').each do |paragraph|
  %p= paragraph
%form
  == #{t 'url'}:
  = text_field_tag 'url', params[:url], :size => 40
  = submit_tag 'Go'

%h2
  2.
  = t 'search_widget_step_2_title'
- t('search_widget_step_2_instructions').each do |paragraph|
  %p= paragraph
#customize_widget
  = render :partial => 'search_widget'

%h2
  3.
  = t 'search_widget_step_3_title'
- t('search_widget_step_3_instructions').each do |paragraph|
  %p= paragraph
%p
  - form_tag({:action => 'customize_search'}, :id => 'search_widget_form', :method => :get) do
    %table
      - @widget_inputs.each do |attr|
        %tr
          %td
            = attr.to_s.humanize + ':'
          %td= text_field_tag attr.to_s, @widget_params[attr]
          %td
            %div{:id => "#{attr.to_s}_select_div"}
              = select_tag "#{attr.to_s}_select", ["<option value=''>Select one</option>"] + @widget_options[attr].collect{|opt| "<option#{" selected='selected'" if opt == @widget_params[attr]}>#{opt}</option>"}, :id => "#{attr.to_s}_select"
      %tr
        %td
          Language:
        %td= select_tag "locale", ["<option value=''>Default user language</option>"] + @locales.collect{|lang,loc| "<option value='#{loc}'#{" selected='selected'" if loc == @widget_params[:locale]}>#{lang}</option>"}, :id => 'widget_locale'
    = submit_tag 'Submit'

%h2
  4.
  = t 'search_widget_step_4_title'
- t('search_widget_step_4_instructions').each do |paragraph|
  %p= paragraph
%p{:style => "margin-left: 3em;"}
  %code#customize_script
    &== <script type="text/javascript" src="#{widget_params_url}"></script><noscript>#{t 'widget.search.noscript', :link => link_to(t 'widget.search.link_text', :controller => :search, :action => :radius, :only_path => false)}</noscript>
:javascript
  $('#search_widget_form select').change(function(element) {
    text_box_id = '#' + $(this).attr('id').replace(/_select$/, '');
    $(text_box_id).val($(this).val());
    $('#search_widget_form').submit();
  });
  $('#search_widget_form input[type=text]').change(function(element) {
    select_box_id = '#' + $(this).attr('id') + '_select';
    $(select_box_id).val($(this).val());
    $('#search_widget_form').submit();
  });
  formInitialized = false;
  $(function() {
    $('#search_widget_form').submit(function() {
      $.post($(this).attr('action'), $(this).serialize(), null, "script");
      return false;
    });
    $('#search_widget_form input[type=submit]').remove();
    formInitialized = true;
  });
  $('select').each(function() {
    var id = $(this).attr('id');
    if (id.match(/_color_select$/)) {
      colors = $("#" + id + ">option:not(:first)").map(function() { return $(this).val(); });
      $('#' + id + '_div').colorPicker({
        defaultColor: -1,
        color: colors,
        columns: 13,
        click: function(color){elem=$('#'+id.replace(/_select$/, '')); elem.val(color); if (formInitialized) {elem.change();}}
      });
    }
  });
