- fields_for address_form do |f|
  %p
    %b= t 'address'
    %br/
    = f.text_field :street_address
  %p
    %b= t 'city'
    %br/
    = f.text_field :city
  %p
    :javascript
      selections = #{state_select_hash.to_json};
      textField = #{f.text_field(:state).to_json};
      emptyField = #{text_field_tag(:location_state, t('not_used'), :disabled => true).to_json}
      function updateStateInput(countrySelect) {
        countryValue = countrySelect.options[countrySelect.selectedIndex].value
        stateElement = $('#location_state')
        stateValue = stateElement.val()

        if(countryValue in selections) {
          if (selections[countryValue] != null) {
            selectList = selections[countryValue];

            stateElement.replaceWith(selectList);

            if((stateValue != '--') && (stateValue != '#{t('not_used')}')) {
              $('#location_state').val(stateValue)
            }
          } else {
            stateElement.replaceWith(emptyField)
          }
        } else {
          stateElement.replaceWith(textField);
          if((stateValue != '--') && (stateValue != '#{t('not_used')}')) {
            $('#location_state').val(stateValue)
          }
        }
      }
    %b= t 'country'
    %br/
    = localized_country_select(:location, :country, [], {:include_blank => t('choose_country')}, :onchange => 'updateStateInput(this)')
  %p#state_province
    %b= t 'state_province'
    %br/
    = f.text_field :state
    :javascript
      $(function() {updateStateInput($('#location_country')[0]);});
  %p
    %b= t 'postal_code'
    %br/
    = f.text_field :zip_code
